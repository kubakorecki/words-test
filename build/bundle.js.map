{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/components/Button.svelte","../../src/components/Counter.svelte","../../src/utils.js","../../src/components/Summary.svelte","../../src/components/TextInput.svelte","../../src/components/Quiz.svelte","../../src/words/chapter1.js","../../src/words/chapter2.js","../../src/words/chapter3.js","../../src/words/chapter4.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.32.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n  export let click = () => {};\n</script>\n\n<button on:click={click}>\n  <slot></slot>\n</button>\n\n<style>\nbutton {\n  font-size: 2em;\n  width: 100%;\n  padding: 0.5em 1em;\n  box-sizing: border-box;\n  border: none;\n  background-color: transparent;\n  margin-top: 1em;\n  border-radius: 2em;\n  font-weight: 600\n}\n\nbutton {\n  background-color: #11698e;\n  color: white;\t\n}\n\nbutton:hover, button:active {\n  background-color: #19456b;\n  cursor: pointer;\n}\n\nbutton:focus {\n\t\toutline: none;\n\t\tbox-shadow: none;\n\t}\n\n</style>","<script>\n  export let current = 1;\n  export let max = 3;\n</script>\n<div class=\"parent\">\n{#if current > max}\n  <div class=\"fill\" style=\"width: 100%\">PODSUMOWANIE</div>\n{:else}\n  <div class=\"fill\" style=\"width: {current / max * 100}%\">{current}/{max}</div>\n{/if}\n</div>\n\n<style>\n  .parent {\n    width: 100%;\n    color: white;\n    font-size: 1em;\n    font-weight: 700;\n    box-sizing: border-box;\n  }\n\n  .fill {\n    padding: 1em;\n    background-color: #16c79a;\n    box-sizing: border-box;\n  }\n\n</style>","export const shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nexport const getWordDescription = (word) => {\n  if (Array.isArray(word)) {\n    return word[0];\n  } else {\n    return word;\n  }\n}","<script>\n  import Button from \"./Button.svelte\";\n  import { getWordDescription } from \"../utils.js\";\n\n  export let selectedWords = [];\n  export let score = 1;\n  export let wordsLength = 1;\n  export let retry = () => {};\n</script>\n\n<div class=\"summary\">\n  <div class=\"score\">{Math.round(score / wordsLength * 10000) / 100} % ({score}/{wordsLength})</div>\n  <ol>\n    {#each selectedWords as word}\n      {#if word.points > 0}\n        <li class=\"correct-answer\">{getWordDescription(word.pl)} : {word.en} ({word.answer})</li>\n      {:else}\n        <li class=\"wrong-answer\">{getWordDescription(word.pl)} : {word.en} ({word.answer})</li>\n      {/if}\n\n      \n    {/each}\n  </ol>\n  <Button click={retry}>Powtórz</Button>\n</div>\n\n<style>\n  .score {\n\t\tfont-size: 3em;\n\t\tfont-weight: 400;\n\t\tmargin: 0.5em auto 1em auto;\n\t\tfont-weight: 600;\n\t\ttext-align: center;\n\t}\n  li {\n\t\ttext-align: left;\n\t}\n  .correct-answer {\n\t\tcolor: #25985b;\n\t}\n\t.wrong-answer {\n\t\tcolor: #d44242;\n  }\n\n  .summary {\n\t\tpadding: 2em 2em;\n\t\tbackground-color: white;\n\t}\n</style>","<script>\n  export let value = \"\";\n  export let readOnly = false;\n  export let ref = null;\n  export let label = \"\";\n\n  let readonly = \"\";\n\n  if (readOnly)\n    readonly = \"readonly\";\n</script>\n\n{#if label}\n<label for=\"{label}\">{label}</label>\n{/if}\n<input name=\"{label}\" type=\"text\" class=\"{readonly}\" bind:this={ref} bind:value={value} {readonly}>\n\n<style>\n  input {\n\t\tfont-size: 2em;\n\t\twidth: 100%;\n\t\tpadding: 0.5em 1em;\n\t\tbox-sizing: border-box;\n\t\tborder: 2px solid #333;\n\t\tbackground-color: white;\n\t\tmargin-top: 0.5em;\n\t\tborder-radius: 2em;\n    font-weight: 600;\n    box-sizing: border-box;\n  }\n  \n  label {\n    font-size: 1.5em;\n    margin-left: 1em;\n    width:100%;\n    font-weight: 600;\n  }\n\n\tinput.readonly {\n\t\topacity: 0.5;\n\t}\n\n\tinput:focus {\n\t\toutline: none;\n\t\tbox-shadow: 0 0 0 1px #333;\n\t}\n\n\tinput:focus {\n\t\toutline: none;\n\t\tbox-shadow: none;\n\t}\n</style>","<script>\n\timport Counter from \"../components/Counter.svelte\";\n\timport Summary from \"../components/Summary.svelte\";\n\timport { onMount } from \"svelte\";\n\timport { shuffleArray, getWordDescription } from \"../utils.js\";\n\timport MainContainer from \"./MainContainer.svelte\";\n\timport TextInput from \"./TextInput.svelte\";\n\n\texport let words;\n\texport let wordsLength = 10;\n\n\tif (wordsLength > words.length) {\n\t\twordsLength = words.length;\n\t}\n\n\tlet answerInput;\n\tshuffleArray(words);\n\n\tlet selectedWords = words.slice(0, wordsLength);\n\tlet index = 0;\n\tlet answer = \"\";\n\tlet score = 0;\n\tlet showCorrectAnswer = false;\n\tlet readOnly = false;\n\n\tconst retry = () => {\n\t\tshuffleArray(words);\n\t\tselectedWords = words.slice(0, wordsLength);\n\t\tindex = 0;\n\t\tanswer = \"\";\n\t\tscore = 0;\n\n\t\tsetTimeout(() => {\n\t\t\tanswerInput.focus();\n\t\t}, 1);\n\t\t\n\t}\n\t\n\n\tconst submitAnswer = () => {\n\t\tif (showCorrectAnswer == true) {\n\t\t\tshowCorrectAnswer = false;\n\t\t\tanswer = \"\";\n\t\t\tindex++;\n\t\t\tanswerInput.focus();\n\t\t\treadOnly = false;\n\t\t\treturn;\n\t\t}\n\n\t\tselectedWords[index].answer = answer;\n\t\tconst correctAnswer = selectedWords[index].en;\n\t\tlet correct = false;\n\n\t\tif (Array.isArray(correctAnswer)) {\n\t\t\tif (correctAnswer.includes(answer)) {\n\t\t\t\tcorrect = true;\n\t\t\t}\n\t\t} else if (answer.toLowerCase() === correctAnswer.toLowerCase()){\n\t\t\tcorrect = true;\n\t\t}\n\n\t\tif (correct) {\n\t\t\tscore++;\n\t\t\tselectedWords[index].points = 1;\t\n\t\t} else {\n\t\t\tshowCorrectAnswer = true;\n\t\t\treadOnly = true;\n\t\t\treturn;\n\t\t}\n\n\t\tanswer = \"\";\n\t\tindex++;\n\t\tanswerInput.focus();\n\t}\n\n\tonMount(() => {\n\t\tanswerInput.focus();\n\t})\n</script>\n\n<Counter current={index + 1} max={wordsLength} />\n\n\t<MainContainer>\n\t\t{#if index < wordsLength}\n\t\t\t<div class=\"word\">\n\t\t\t\t{getWordDescription(selectedWords[index].pl)}\n\t\t\t\t{#if showCorrectAnswer}\n\t\t\t\t\t- <span class=\"hint\">{selectedWords[index].en}</span>\t\t\t\t\n\t\t\t\t{/if}\n\t\t\t</div>\n\n\t\t\t<form on:submit|preventDefault={submitAnswer} spellcheck=\"false\">\n\t\t\t\t<TextInput bind:value={answer} bind:ref={answerInput} readOnly={readOnly} />\n\t\t\t\t<input type=\"submit\" value=\"Dalej\">\n\t\t\t</form>\n\t\t{:else}\n\t\t<Summary selectedWords={selectedWords} wordsLength={wordsLength} score={score} retry={retry}/>\n\t\t{/if}\n\t</MainContainer>\n\n<style>\n\t.word {\n\t\tfont-size: 3em;\n\t\tfont-weight: 400;\n\t\tmargin: 1em auto 1em auto;\n\t\tfont-weight: 600;\n\t\ttext-align: center;\n\t}\n\n\t.hint {\n\t\tcolor: #d44242;\n\t}\n\n\tinput {\n\t\tfont-size: 2em;\n\t\twidth: 100%;\n\t\tpadding: 0.5em 1em;\n\t\tbox-sizing: border-box;\n\t\tborder: none;\n\t\tbackground-color: transparent;\n\t\tmargin-top: 1em;\n\t\tborder-radius: 2em;\n\t\tfont-weight: 600\n\t}\n\n\tinput[type=submit] {\n\t\tbackground-color: #11698e;\n\t\tcolor: white;\t\n\t}\n\n\tinput[type=submit]:hover, input[type=submit]:active {\n\t\tbackground-color: #19456b;\n\t\tcursor: pointer;\n\t}\n\n\tinput:focus {\n\t\toutline: none;\n\t\tbox-shadow: none;\n\t}\n</style>","// CZŁOWIEK\n\nexport default [\n  // DANE OSOBOWE\n  {\n    pl: \"wiek\",\n    en: \"age\"\n  },\n  {\n    pl: \"miejsce urodzenia\",\n    en: \"place of birth\"\n  },\n  {\n    pl: \"rozwiedziony\",\n    en: \"divorced\"\n  },\n  {\n    pl: \"imię\",\n    en: \"first name\"\n  },\n  {\n    pl: \"płci męskiej\",\n    en: \"male\",\n  },\n  {\n    pl: \"płci żeńskiej\",\n    en: \"female\",\n  },\n  {\n    pl: \"stan cywilny\",\n    en: \"marital status\",\n  },\n  {\n    pl: \"żonaty\",\n    en: \"married\",\n  },\n  {\n    pl: \"drugie imię\",\n    en: \"middle name\",\n  },\n  {\n    pl: \"narodowość\",\n    en: \"nationality\",\n  },\n  {\n    pl: \"zawód\",\n    en: \"occupation\",\n  },\n  {\n    pl: \"dane osobowe\",\n    en: \"personal data\",\n  },\n  {\n    pl: \"stanu wolnego\",\n    en: \"single\",\n  },\n  {\n    pl: \"nazwisko\",\n    en: \"surname\",\n  },\n  {\n    pl: \"wdowa\",\n    en: \"widow\",\n  },\n  \n  // WYGLĄD ZEWNĘTRZNY\n  {\n    pl: \"być podobnym do\",\n    en: \"be similar to\",\n  },\n  {\n    pl: \"opis\",\n    en: \"description\",\n  },\n  {\n    pl: \"atrakcyjny\",\n    en: \"good-looking\",\n  },\n  {\n    pl: \"przystojny\",\n    en: \"handsome\",\n  },\n  {\n    pl: \"wyglądać jak\",\n    en: \"look like\",\n  },\n  {\n    pl: \"brzydki\",\n    en: \"ugly\",\n  },\n  {\n    pl: \"nieatrakcyjny\",\n    en: \"unattractive\",\n  },\n\n  // WZROST\n  {\n    pl: \"być średniego wzrostu\",\n    en: \"be of medium height\",\n  },\n  {\n    pl: \"niski\",\n    en: \"short\",\n  },\n  {\n    pl: \"wysoki\",\n    en: \"tall\",\n  },\n\n  // BUDOWA CIAŁA\n  {\n    pl: \"mieć nadwagę\",\n    en: \"be overweight\",\n  },\n  {\n    pl: \"gruby\",\n    en: \"fat\",\n  },\n  {\n    pl: \"pulchny\",\n    en: \"plump\",\n  },\n  {\n    pl: \"szczupły\",\n    en: \"slim\",\n  },\n  {\n    pl: \"przysadzisty\",\n    en: \"stocky\",\n  },\n  {\n    pl: \"chudy\",\n    en: \"thin\",\n  },\n  {\n    pl: \"dobrze zbudowany\",\n    en: \"well-built\",\n  },\n  \n  // WIEK\n  {\n    pl: \"dorosły\",\n    en: \"adult\",\n  },\n  {\n    pl: \"w podeszłym wieku\",\n    en: \"elderly\",\n  },\n  {\n    pl: \"po dwudziestce\",\n    en: [\"in his twenties\", \"in her twenties\"]\n  },\n  {\n    pl: \"nastoletnia\",\n    en: \"in her teens\",\n  },\n  {\n    pl: \"w średnim wieku\",\n    en: \"middle-aged\",\n  },\n  {\n    pl: \"stary\",\n    en: \"old\",\n  },\n  {\n    pl: \"młody\",\n    en: \"young\",\n  },\n\n  // TWARZ\n  {\n    pl: \"broda\",\n    en: \"beard\",\n  },\n  {\n    pl: \"piegi\",\n    en: \"freckles\",\n  },\n  {\n    pl: \"pełne usta\",\n    en: \"full lips\",\n  },\n  {\n    pl: \"wąskie usta\",\n    en: \"thin lips\",\n  },\n  {\n    pl: \"wysokie czoło\",\n    en: \"high forehead\",\n  },\n  {\n    pl: \"wąsy\",\n    en: \"moustache\",\n  },\n  {\n    pl: \"blady\",\n    en: \"pale\",\n  },\n  {\n    pl: \"pryszcz\",\n    en: \"pimple\",\n  },\n  {\n    pl: \"blizna\",\n    en: \"scar\",\n  },\n  {\n    pl: \"zadarty nos\",\n    en: \"snub nose\",\n  },\n  {\n    pl: \"mocny podbródek\",\n    en: \"strong chin\",\n  },\n  {\n    pl: \"małe oczy\",\n    en: [\"tiny eyes\", \"small eyes\"],\n  },\n  {\n    pl: \"zmarszczki\",\n    en: \"wrinkles\",\n  },\n\n  // WŁOSY\n  {\n    pl: \"łysy\",\n    en: \"bald\",\n  },\n  {\n    pl: \"blond włosy\",\n    en: \"blond hair\",\n  },\n  {\n    pl: \"jasne włosy\",\n    en: \"fair hair\",\n  },\n  {\n    pl: \"ciemne włosy\",\n    en: \"dark hair\",\n  },\n  {\n    pl: \"rude włosy\",\n    en: \"red hair\",\n  },\n  {\n    pl: \"siwe włosy\",\n    en: \"grey hair\",\n  },\n  {\n    pl: \"kręcone włosy\",\n    en: \"curly hair\",\n  },\n  {\n    pl: \"farbowane włosy\",\n    en: \"dyed hair\",\n  },\n  {\n    pl: \"grzywka\",\n    en: \"fringe\",\n  },\n  {\n    pl: \"kucyk\",\n    en: \"pony tail\",\n  },\n  {\n    pl: \"sterczące włosy\",\n    en: \"spiky hair\",\n  },\n  {\n    pl: \"proste włosy\",\n    en: \"straight hair\",\n  },\n  {\n    pl: \"falujące włosy\",\n    en: \"wavy hair\",\n  },\n\n  // STYL\n  {\n    pl: \"nieformalny\",\n    en: \"casual\",\n  },\n  {\n    pl: \"wygodny\",\n    en: \"comfortable\",\n  },\n  {\n    pl: \"elegancki\",\n    en: [\"elegant\", \"smart\"],\n  },\n  {\n    pl: \"modny\",\n    en: \"fashionable\",\n  },\n  {\n    pl: [\"oficjalny, odświętny (strój)\", \"oficjalny\", \"odświętny\"],\n    en: \"formal\",\n  },\n  {\n    pl: \"luźny\",\n    en: \"loose\",\n  },\n  {\n    pl: \"niechlujny\",\n    en: \"scruffy\",\n  },\n  {\n    pl: \"obcisły\",\n    en: \"tight\",\n  },\n  \n  // CZĘŚCI GARDEROBY\n  {\n    pl: \"bluzka\",\n    en: \"blouse\",\n  },\n  {\n    pl: \"bokserki\",\n    en: \"boxer shorts\",\n  },\n  {\n    pl: \"płaszcz\",\n    en: \"coat\",\n  },\n  {\n    pl: \"sukienka\",\n    en: \"dress\",\n  },\n  {\n    pl: \"bluza z kapturem\",\n    en: \"hoody\",\n  },\n  {\n    pl: \"polar\",\n    en: \"fleece\",\n  },\n  {\n    pl: \"kurtka\",\n    en: \"jacket\",\n  },\n  {\n    pl: \"sweter\",\n    en: [\"jumper\", \"sweater\"]\n  },\n  {\n    pl: \"para jeansów\",\n    en: \"pair of jeans\",\n  },\n  {\n    pl: \"płaszcz przeciwdeszczowy\",\n    en: \"raincoat\",\n  },\n  {\n    pl: \"koszula\",\n    en: \"shirt\",\n  },\n  {\n    pl: \"krótkie spodenki\",\n    en: \"shorts\",\n  },\n  {\n    pl: \"spódnica\",\n    en: \"skirt\",\n  },\n  {\n    pl: \"skarpetki\",\n    en: \"socks\",\n  },\n  {\n    pl: \"garnitur\",\n    en: \"suit\",\n  },\n  {\n    pl: \"bluza\",\n    en: \"sweatshirt\",\n  },\n  {\n    pl: \"krawat\",\n    en: \"tie\",\n  },\n  {\n    pl: \"rajstopy\",\n    en: \"tights\",\n  },\n  {\n    pl: \"dres\",\n    en: \"tracksuit\",\n  },\n  {\n    pl: \"spodnie\",\n    en: [\"trousers\", \"pants\"],\n  },\n  {\n    pl: \"bielizna\",\n    en: \"underwear\",\n  },\n\n  // BUTY\n  {\n    pl: \"buty z cholewką\",\n    en: \"boots\",\n  },\n  {\n    pl: \"buty na wysokim obcasie\",\n    en: \"high heels\",\n  },\n  {\n    pl: \"buty\",\n    en: \"shoes\",\n  },\n  {\n    pl: \"kapcie\",\n    en: \"slippers\",\n  },\n  {\n    pl: \"obuwie sportowe\",\n    en: [\"trainers\", \"sport shoes\"]\n  },\n  {\n    pl: \"kalosze\",\n    en: \"wellingtons\",\n  },\n\n  // DODATKI\n  {\n    pl: \"pasek\",\n    en: \"belt\",\n  },\n  {\n    pl: \"bransoletka\",\n    en: \"bracelet\",\n  },\n  {\n    pl: \"czapka z daszkiem\",\n    en: \"cap\",\n  },\n  {\n    pl: \"kolczyki\",\n    en: \"earrings\",\n  },\n  {\n    pl: \"rękawiczki\",\n    en: \"gloves\",\n  },\n  {\n    pl: \"kapelusz\",\n    en: \"hat\",\n  },\n  {\n    pl: \"biżuteria\",\n    en: \"jewellery\",\n  },\n  {\n    pl: \"naszyjnik\",\n    en: \"necklace\",\n  },\n  {\n    pl: \"szalik\",\n    en: \"scarf\",\n  },\n  {\n    pl: \"parasolka\",\n    en: \"umbrella\",\n  },\n\n  // CZĘŚCI UBRAŃ\n  {\n    pl: \"guzik\",\n    en: \"button\",\n  },\n  {\n    pl: \"kieszeń\",\n    en: \"pocket\",\n  },\n  {\n    pl: \"rękaw\",\n    en: \"sleeve\",\n  },\n  {\n    pl: \"zamek błyskawiczny\",\n    en: \"zip\",\n  },\n  \n  // MATERIAŁY\n  {\n    pl: \"bawełniany\",\n    en: \"cotton\",\n  },\n  {\n    pl: \"skórzany\",\n    en: \"leather\",\n  },\n  {\n    pl: \"gładki\",\n    en: \"plain\",\n  },\n  {\n    pl: \"jedwabny\",\n    en: \"silk\",\n  },\n  {\n    pl: \"wełniany\",\n    en: \"woolen\",\n  },\n\n  // CZASOWNIKI\n  {\n    pl: [\"ubierać się, nosić (ubrania)\", \"ubiera się\", \"nosić\"],\n    en: \"dress\",\n  },\n  {\n    pl: [\"pasować (rozmiarem)\", \"pasować\"],\n    en: \"fit\",\n  },\n  {\n    pl: \"ubrać się\",\n    en: \"get dressed\",\n  },\n  {\n    pl: \"pasować do czegoś\",\n    en: [\"go with something\", \"go with sth\"],\n  },\n  {\n    pl: \"wyglądać dobrze\",\n    en: \"look good\",\n  },\n  {\n    pl: \"pasować do czegoś\",\n    en: \"match\",\n  },\n  {\n    pl: \"założyć\",\n    en: \"put on\",\n  },\n  {\n    pl: [\"pasować (kolorem lub fasonem)\", \"pasować\"],\n    en: \"suit\",\n  },\n  {\n    pl: \"zdjąć\",\n    en: \"take off\",\n  },\n  {\n    pl: \"przymierzyć\",\n    en: \"try on\",\n  },\n  {\n    pl: [\"nosić (ubrania)\", \"nosić\"],\n    en: \"wear\",\n  },\n\n  // CECHY CHARAKTERU\n  {\n    pl: \"ambitny\",\n    en: \"ambitious\",\n  },\n  {\n    pl: \"nudny\",\n    en: \"boring\",\n  },\n  {\n    pl: \"odważny\",\n    en: \"brave\",\n  },\n  {\n    pl: \"spokojny\",\n    en: \"calm\",\n  },\n  {\n    pl: \"bystry\",\n    en: \"clever\",\n  },\n  {\n    pl: \"pewny siebie\",\n    en: \"confident\",\n  },\n  {\n    pl: \"kreatywny\",\n    en: \"creative\",\n  },\n  {\n    pl: \"zdecydowany\",\n    en: \"decisive\",\n  },\n  {\n    pl: \"nieuczciwy\",\n    en: \"dishonest\",\n  },\n  {\n    pl: \"nielojalny\",\n    en: \"disloyal\",\n  },\n  {\n    pl: \"szczodry\",\n    en: \"generous\",\n  },\n  {\n    pl: \"pracowity\",\n    en: \"hard-working\",\n  },\n  {\n    pl: \"uczciwy\",\n    en: \"honest\",\n  },\n  {\n    pl: \"nieuprzejmy\",\n    en: \"impolite\",\n  },\n  {\n    pl: \"niecierpliwy\",\n    en: \"impatient\",\n  },\n  {\n    pl: \"inspirujący\",\n    en: \"inspiring\",\n  },\n  {\n    pl: \"nieodpowiedzialny\",\n    en: \"irresponsible\",\n  },\n  {\n    pl: \"leniwy\",\n    en: \"lazy\",\n  },\n  {\n    pl: [\"złośliwy, skąpy\", \"złośliwy\", \"skąpy\"],\n    en: \"mean\",\n  },\n  {\n    pl: \"skromny\",\n    en: \"modest\",\n  },\n  {\n    pl: \"praktyczny\",\n    en: \"practical\",\n  },\n  {\n    pl: \"cichy\",\n    en: \"quiet\",\n  },\n  {\n    pl: \"samolubny\",\n    en: \"selfish\",\n  },\n  {\n    pl: \"towarzyski\",\n    en: \"sociable\",\n  },\n  {\n    pl: \"uparty\",\n    en: \"stubborn\",\n  },\n  {\n    pl: \"rozmowny\",\n    en: \"talkative\",\n  },\n  {\n    pl: \"nieschludny\",\n    en: \"untidy\",\n  },\n  {\n    pl: \"niesprawiedliwy\",\n    en: \"unfair\",\n  },\n  {\n    pl: \"niemiły\",\n    en: \"unfriendly\",\n  },\n  {\n    pl: \"nieżyczliwy\",\n    en: \"unkind\",\n  },\n\n  // UCZUCIA I EMOCJE\n  {\n    pl: \"zdumiony\",\n    en: \"amazed\",\n  },\n  {\n    pl: \"rozbawiony\",\n    en: \"amused\",\n  },\n  {\n    pl: \"rozgniewany\",\n    en: \"angry\",\n  },\n  {\n    pl: \"rozdrażniony\",\n    en: \"annoyed\",\n  },\n  {\n    pl: \"znudzony\",\n    en: \"bored\",\n  },\n  {\n    pl: [\"zdezorientowany, zagubiony\", \"zdezorientowany\", \"zagubiony\"],\n    en: \"confused\",\n  },\n  {\n    pl: \"przygnębiony\",\n    en: \"depressed\",\n  },\n  {\n    pl: \"rozczarowany\",\n    en: \"disappointed\",\n  },\n  {\n    pl: \"zawstydzony\",\n    en: \"embarrassed\",\n  },\n  {\n    pl: \"podekscytowany\",\n    en: \"excited\",\n  },\n  {\n    pl: \"wyczerpany\",\n    en: \"exhausted\",\n  },\n  {\n    pl: \"przestraszony\",\n    en: \"frightened\",\n  },\n  {\n    pl: [\"pełen nadziei, ufny\", \"pełen nadziei\", \"ufny\"],\n    en: \"hopeful\",\n  },\n  {\n    pl: \"zazdrosny\",\n    en: \"jealous\",\n  },\n  {\n    pl: \"samotny\",\n    en: \"lonely\",\n  },\n  {\n    pl: \"zadowolony\",\n    en: \"pleased\",\n  },\n  {\n    pl: \"dumny\",\n    en: \"proud\",\n  },\n  {\n    pl: \"zestresowany\",\n    en: \"stressed\",\n  },\n  {\n    pl: \"zdziwiony\",\n    en: \"surprised\",\n  },\n  {\n    pl: \"zmęczony\",\n    en: \"tired\",\n  },\n\n  // CZASOWNIKI ZŁOŻONE I ZWROTY\n  {\n    pl: \"bać się czegoś\",\n    en: [\"be afraid of something\", \"be afraid of sth\"],\n  },\n  {\n    pl: \"być złym na kogoś\",\n    en: [\"be angry with somebody\", \"be angry with sb\"],\n  },\n  {\n    pl: \"śmiertelnie się nudzić\",\n    en: \"be bored to death\",\n  },\n  {\n    pl: \"lubić coś\",\n    en: [\"be fond of something\", \"be fond of sth\"],\n  },\n  {\n    pl: \"być dobrym w czymś\",\n    en: [\"be good at something\", \"be good at sth\"],\n  },\n  {\n    pl: \"interesować się czymś\",\n    en: [\"be keen on something\", \"be keen on sth\"],\n  },\n  {\n    pl: \"być do niczego w czymś\",\n    en: [\"be useless at something\", \"be useless at sth\"],\n  },\n  {\n    pl: \"martwić się czymś\",\n    en: [\"be worried about something\", \"be worried about sth\"],\n  },\n  {\n    pl: \"należeć do\",\n    en: \"belong to\",\n  },\n  {\n    pl: \"obgryzać paznokcie\",\n    en: [\"bite nails\", \"bite your nails\"],\n  },\n  {\n    pl: \"mrugać oczami\",\n    en: [\"blink eyes\", \"blink your eyes\"],\n  },\n  {\n    pl: \"zmieniać zdanie\",\n    en: [\"change your mind\", \"change mind\"],\n  },\n  {\n    pl: \"skrzyżować ramiona\",\n    en: [\"cross arms\", \"cross your arms\"],\n  },\n  {\n    pl: \"przebrać się za coś\",\n    en: \"dress up as something\",\n  },\n  {\n    pl: \"ulubiona rozrywka\",\n    en: \"favourite pastime\",\n  },\n  {\n    pl: \"wypełnić formularz\",\n    en: \"fill in a form\",\n  },\n  {\n    pl: \"piłka nożna\",\n    en: [\"footie\", \"football\"],\n  },\n  {\n    pl: \"koncert\",\n    en: \"gig\",\n  },\n  {\n    pl: \"ukrywać uczucia\",\n    en: [\"hide feelings\", \"hide your feelings\"],\n  },\n  {\n    pl: \"nie okazywać uczuć\",\n    en: [\"keep feelings inside\", \"keep your feelings inside\"],\n  },\n  {\n    pl: \"zdrowie psychiczne\",\n    en: \"mental health\",\n  },\n  {\n    pl: \"kazać komuś coś zrobić\",\n    en: [\"order somebody to do something\", \"order sb to do sth\"],\n  },\n  {\n    pl: \"to bułka z masłem\",\n    en: [\"it's a piece of cake\", \"it is a piece of cake\", \"piece of cake\"],\n  },\n  {\n    pl: \"wprawiać kogoś w dobry nastrój\",\n    en: [\"put somebody in a good mood\", \"put sb in a good mood\"],\n  },\n  {\n    pl: \"poczucie humoru\",\n    en: \"sense of humour\",\n  },\n  {\n    pl: \"bezdomne zwierzę\",\n    en: \"stray animal\",\n  },\n  {\n    pl: \"pukać palcami\",\n    en: [\"tap fingers\", \"tap your fingers\"],\n  },\n\t];","// MIEJSCE ZAMIESZKANIA\n\nexport default [\n  // części domu\n  {\n    pl: \"strych\",\n    en: \"attic\"\n  },\n  {\n    pl: \"piwnica\",\n    en: \"basement\",\n  },\n  {\n    pl: \"łazienka\",\n    en: \"bathroom\",\n  },\n  {\n    pl: \"sypialnia\",\n    en: \"bedroom\",\n  },\n  {\n    pl: \"sufit\",\n    en: \"ceiling\",\n  },\n  {\n    pl: \"komin\",\n    en: \"chimney\",\n  },\n  {\n    pl: \"jadalnia\",\n    en: \"dining room\",\n  },\n  {\n    pl: \"na dole domu\",\n    en: \"downstairs\",\n  },\n  {\n    pl: \"podjazd\",\n    en: \"driveway\",\n  },\n  {\n    pl: [\"ogrodzenie\", \"płot\"],\n    en: \"fence\",\n  },\n  {\n    pl: \"podłoga\",\n    en: \"floor\",\n  },\n  {\n    pl: \"garaż\",\n    en: \"garage\",\n  },\n  {\n    pl: \"parter\",\n    en: \"ground floor\",\n  },\n  {\n    pl: \"przedpokój\",\n    en: \"hall\",\n  },\n  {\n    pl: \"domofon\",\n    en: \"intercom\",\n  },\n  {\n    pl: \"kuchnia\",\n    en: \"kitchen\",\n  },\n  {\n    pl: \"trawnik\",\n    en: \"lawn\",\n  },\n  {\n    pl: \"winda\",\n    en: \"lift\",\n  },\n  {\n    pl: \"salon\",\n    en: \"living room\",\n  },\n  {\n    pl: \"dach\",\n    en: \"roof\",\n  },\n  {\n    pl: \"schody\",\n    en: \"stairs\",\n  },\n  {\n    pl: \"gabinet\",\n    en: \"study\",\n  },\n  {\n    pl: \"taras\",\n    en: \"terrace\",\n  },\n  {\n    pl: \"toaleta\",\n    en: \"toilet\",\n  },\n  {\n    pl: \"na górze domu\",\n    en: \"upstairs\",\n  },\n  {\n    pl: \"ściana\",\n    en: \"wall\",\n  },\n  // meble i wyposażenie\n  {\n    pl: \"klimatyzacja\",\n    en: \"air conditioning\",\n  },\n  {\n    pl: \"żaluzje\",\n    en: \"blinds\",\n  },\n  {\n    pl: \"półka na książki\",\n    en: \"bookshelf\",\n  },\n  {\n    pl: \"dywan\",\n    en: \"carpet\",\n  },\n  {\n    pl: \"centralne ogrzewanie\",\n    en: \"central heating\",\n  },\n  {\n    pl: \"zasłony\",\n    en: \"curtains\",\n  },\n  {\n    pl: \"szuflada\",\n    en: \"drawer\",\n  },\n  {\n    pl: \"wykładzina dywanowa\",\n    en: \"fitted carpet\",\n  },\n  {\n    pl: \"meble\",\n    en: \"furniture\",\n  },\n  {\n    pl: \"obraz\",\n    en: \"painting\",\n  },\n  {\n    pl: \"plakat\",\n    en: \"poster\",\n  },\n  {\n    pl: \"kaloryfer\",\n    en: \"radiator\",\n  },\n  {\n    pl: \"tapeta\",\n    en: \"wallpaper\",\n  },\n  {\n    pl: \"parapet\",\n    en: \"windowsill\",\n  },\n  // pokój dzienny\n  {\n    pl: \"fotel\",\n    en: \"armchair\",\n  },\n  {\n    pl: \"biblioteczka\",\n    en: \"bookcase\",\n  },\n  {\n    pl: \"stolik kawowy\",\n    en: \"coffee table\",\n  },\n  {\n    pl: \"poduszka ozdobna\",\n    en: \"cushion\",\n  },\n  {\n    pl: \"kominek\",\n    en: \"fireplace\",\n  },\n  {\n    pl: \"roślina\",\n    en: \"plant\",\n  },\n  {\n    pl: \"kanapa\",\n    en: \"sofa\",\n  },\n  // kuchnia\n  {\n    pl: \"kuchenka\",\n    en: \"cooker\",\n  },\n  {\n    pl: [\"szafka\", \"kredens\"],\n    en: \"cupboard\",\n  },\n  {\n    pl: \"zmywarka\",\n    en: \"dishwasher\",\n  },\n  {\n    pl: \"lodówka\",\n    en: \"fridge\",\n  },\n  {\n    pl: \"patelnia\",\n    en: \"frying pan\",\n  },\n  {\n    pl: \"czajnik\",\n    en: \"kettle\",\n  },\n  {\n    pl: \"kubek\",\n    en: [\"mug\", \"cup\"],\n  },\n  {\n    pl: \"piekarnik\",\n    en: \"oven\",\n  },\n  {\n    pl: [\"rondel\", \"patelnia\"],\n    en: \"pan\",\n  },\n  {\n    pl: \"talerz\",\n    en: \"plate\",\n  },\n  {\n    pl: \"garnek\",\n    en: \"pot\",\n  },\n  {\n    pl: \"zlew\",\n    en: \"sink\",\n  },\n  {\n    pl: \"kosz na śmieci\",\n    en: [\"wastebin\", \"rubbish bin\"]\n  },\n  //sypialnia\n  {\n    pl: \"budzik\",\n    en: \"alarm clock\",\n  },\n  {\n    pl: \"stolik nocny\",\n    en: \"bedside table\",\n  },\n  {\n    pl: \"koc\",\n    en: \"blanket\",\n  },\n  {\n    pl: \"komoda\",\n    en: \"chest of drawers\",\n  },\n  {\n    pl: \"wieszak\",\n    en: \"coat hanger\",\n  },\n  {\n    pl: \"biurko\",\n    en: \"desk\",\n  },\n  {\n    pl: \"kołdra\",\n    en: \"duvet\",\n  },\n  {\n    pl: \"poduszka\",\n    en: \"pillow\",\n  },\n  {\n    pl: [\"chodnik\", \"dywanik\"],\n    en: \"rug\",\n  },\n  {\n    pl: \"szafa\",\n    en: \"wardrobe\",\n  },\n  //łazienka i toaleta\n  {\n    pl: \"wanna\",\n    en: \"bath\",\n  },\n  {\n    pl: \"suszarka\",\n    en: \"hairdryer\",\n  },\n  {\n    pl: \"lustro\",\n    en: \"mirror\",\n  },\n  {\n    pl: \"prysznic\",\n    en: \"shower\",\n  },\n  {\n    pl: [\"kran\", \"kurek\"],\n    en: \"tap\",\n  },\n  {\n    pl: \"sedes\",\n    en: \"toilet\",\n  },\n  {\n    pl: \"ręcznik\",\n    en: \"towel\",\n  },\n  {\n    pl: \"umywalka\",\n    en: \"washbasin\",\n  },\n  {\n    pl: \"pralka\",\n    en: \"washing machine\",\n  },\n  //przymiotniki\n  {\n    pl: \"czysty\",\n    en: \"clean\",\n  },\n  {\n    pl: \"wygodny\",\n    en: \"comfortable\",\n  },\n  {\n    pl: \"przytulny\",\n    en: \"cosy\",\n  },\n  {\n    pl: [\"ozdobiony\", \"pomalowany\"],\n    en: \"decorated\",\n  },\n  {\n    pl: \"pusty\",\n    en: \"empty\",\n  },\n  {\n    pl: [\"zabawnie\", \"śmiesznie wyglądający\"],\n    en: [\"funny-looking\", \"funny looking\"]\n  },\n  {\n    pl: \"umeblowany\",\n    en: \"furnished\",\n  },\n  {\n    pl: [\"olbrzymi\", \"wielki\"],\n    en: \"huge\",\n  },\n  {\n    pl: \"jasny\",\n    en: \"light\",\n  },\n  {\n    pl: \"luksusowy\",\n    en: \"luxurious\",\n  },\n  {\n    pl: [\"nieuporządkowany\", \"zabałaganiony\"],\n    en: [\"messy\", \"untidy\"]\n  },\n  {\n    pl: \"staromodny\",\n    en: [\"old-fashioned\", \"old fashioned\"]\n  },\n  {\n    pl: \"nowoczesny\",\n    en: \"modern\",\n  },\n  {\n    pl: \"przyjemny\",\n    en: \"pleasant\",\n  },\n  {\n    pl: [\"niechlujny\", \"brudny\"],\n    en: \"scruffy\",\n  },\n  {\n    pl: \"elegancki\",\n    en: \"smart\",\n  },\n  {\n    pl: \"przestronny\",\n    en: \"spacious\",\n  },\n  {\n    pl: \"kamienny\",\n    en: \"stone\",\n  },\n  {\n    pl: \"słoneczny\",\n    en: \"sunny\",\n  },\n  {\n    pl: [\"schludny\", \"posprzątany\"],\n    en: \"tidy\",\n  },\n  {\n    pl: \"maleńki\",\n    en: \"tiny\",\n  },\n  {\n    pl: \"niezwykły\",\n    en: \"unusual\",\n  },\n  {\n    pl: \"dobrze wyposażony\",\n    en: [\"well-equipped\", \"well equipped\"]\n  },\n  {\n    pl: \"drewniany\",\n    en: \"wooden\",\n  },\n  {\n    pl: [\"dogodny\", \"wygodny\"],\n    en: \"convenient\",\n  },\n  {\n    pl: \"zatłoczony\",\n    en: \"crowded\",\n  },\n  {\n    pl: \"niebezpieczny\",\n    en: \"dangerous\",\n  },\n  {\n    pl: \"tętniący życiem\",\n    en: \"lively\",\n  },\n  {\n    pl: \"hałaśliwy\",\n    en: \"noisy\",\n  },\n  {\n    pl: \"spokojny\",\n    en: \"peaceful\",\n  },\n  {\n    pl: \"malowniczy\",\n    en: \"picturesque\",\n  },\n  {\n    pl: \"zanieczyszczony\",\n    en: \"polluted\",\n  },\n  {\n    pl: \"cichy\",\n    en: \"quiet\",\n  },\n  {\n    pl: \"bezpieczny\",\n    en: \"safe\",\n  },\n  // przyimki\n  {\n    pl: \"nad\",\n    en: \"above\",\n  },\n  {\n    pl: \"z tyłu\",\n    en: \"at the back\",\n  },\n  {\n    pl: \"z przodu\",\n    en: \"at the front\",\n  },\n  {\n    pl: \"pomiędzy\",\n    en: \"between\",\n  },\n  {\n    pl: \"przed\",\n    en: \"in front of\",\n  },\n  {\n    pl: \"w rogu\",\n    en: \"in the corner\",\n  },\n  {\n    pl: \"pośrodku\",\n    en: \"in the middle\",\n  },\n  {\n    pl: \"wewnątrz\",\n    en: \"inside\",\n  },\n  {\n    pl: \"blisko\",\n    en: \"near\",\n  },\n  {\n    pl: \"obok\",\n    en: \"next to\",\n  },\n  {\n    pl: \"po prawej stronie\",\n    en: \"on the right\",\n  },\n  {\n    pl: \"po lewej stronie\",\n    en: \"on the left\",\n  },\n  {\n    pl: \"na prawo od\",\n    en: \"to the right of\",\n  },\n  {\n    pl: \"na lewo od\",\n    en: \"to the left of\",\n  },\n  {\n    pl: \"naprzeciwko\",\n    en: \"opposite\",\n  },\n  {\n    pl: \"na zewnątrz\",\n    en: \"outside\",\n  },\n  {\n    pl: \"pod\",\n    en: \"under\",\n  },\n\n  // Rodzaje domów\n  {\n    pl: \"mieszkanie\",\n    en: \"flat\",\n  },\n  {\n    pl: \"blok mieszkalny\",\n    en: \"block of flats\",\n  },\n  {\n    pl: \"domek na wsi\",\n    en: \"cottage\",\n  },\n  {\n    pl: \"dom jednorodzinny\",\n    en: \"detached house\",\n  },\n  {\n    pl: [\"akademik\", \"internat\", \"bursa\"],\n    en: \"hall of residence\",\n  },\n  {\n    pl: \"domek letniskowy\",\n    en: \"holiday home\",\n  },\n  {\n    pl: \"drapacz chmur\",\n    en: \"skyscraper\",\n  },\n  {\n    pl: [\"zabytkowa rezydencja\", \"dwór\"],\n    en: \"stately home\",\n  },\n  {\n    pl: \"dom szeregowy\",\n    en: \"terraced house\",\n  },\n  {\n    pl: \"rezydencja miejska\",\n    en: \"town house\",\n  },\n\n  // POŁOŻENIE\n  {\n    pl: [\"teren\", \"okolica\"],\n    en: \"area\",\n  },\n  {\n    pl: \"nad jeziorem\",\n    en: \"by the lake\",\n  },\n  {\n    pl: \"blisko czegoś\",\n    en: \"close to something\",\n  },\n  {\n    pl: \"daleko od czegoś\",\n    en: \"far from something\",\n  },\n  {\n    pl: \"w hałaśliwej dzielnicy\",\n    en: \"in a noisy district\",\n  },\n  {\n    pl: \"w cichej okolicy\",\n    en: \"in a quiet neighbourhood\",\n  },\n  {\n    pl: \"w stolicy\",\n    en: \"in the capital city\",\n  },\n  {\n    pl: \"na wsi\",\n    en: \"in the country\",\n  },\n  {\n    pl: \"w centrum\",\n    en: \"in the heart of\",\n  },\n  {\n    pl: \"na głównej ulicy\",\n    en: \"in the main street\",\n  },\n  {\n    pl: \"w górach\",\n    en: \"in the mountains\",\n  },\n  {\n    pl: \"na przedmieściu\",\n    en: \"in the suburbs\",\n  },\n  {\n    pl: \"w centrum małego miasta\",\n    en: \"in the town center\",\n  },\n  {\n    pl: \"umieszczony\",\n    en: \"located\",\n  },\n  {\n    pl: \"nieopodal\",\n    en: \"nearby\",\n  },\n  {\n    pl: \"na plaży\",\n    en: \"on the beach\",\n  },\n  {\n    pl: \"na granicy\",\n    en: \"on the border\",\n  },\n  {\n    pl: \"z widokiem na rzekę\",\n    en: \"overlooking the river\",\n  },\n  {\n    pl: [\"wieś\", \"wioska\"],\n    en: \"village\",\n  },\n\n  // Życie na wsi i w mieście\n  {\n    pl: \"być blisko natury\",\n    en: \"be close to nature\",\n  },\n  {\n    pl: \"ruchliwe ulice\",\n    en: \"busy streets\",\n  },\n  {\n    pl: \"kawiarnia\",\n    en: \"cafe\",\n  },\n  {\n    pl: \"parking\",\n    en: \"car park\",\n  },\n  {\n    pl: \"kościół\",\n    en: \"church\",\n  },\n  {\n    pl: \"czyste powietrze\",\n    en: \"clean air\",\n  },\n  {\n    pl: \"chodnik\",\n    en: [\"pavement\", \"sidewalk\"],\n  },\n  {\n    pl: \"komunikacja publiczna\",\n    en: \"public transport\",\n  },\n  {\n    pl: \"centrum handlowe\",\n    en: \"shopping centre\",\n  },\n  {\n    pl: \"centrum sportu\",\n    en: \"sports centre\",\n  },\n  {\n    pl: \"korek uliczny\",\n    en: \"traffic jam\",\n  },\n  {\n    pl: \"w zasięgu dojazdu do pracy\",\n    en: \"within commuting distance\",\n  },\n\n  // Zwroty\n  {\n    pl: \"oprócz\",\n    en: \"apart from\",\n  },\n  {\n    pl: \"należeć do\",\n    en: \"belong to\",\n  },\n  {\n    pl: \"składać się z\",\n    en: \"consist of\",\n  },\n  {\n    pl: \"urządzić pokój\",\n    en: \"decorate a room\",\n  },\n  {\n    pl: \"odnowić\",\n    en: [\"do renovate\", \"renovate\", \"do up\"],\n  },\n  {\n    pl: \"agencja nieruchomości\",\n    en: \"estate agency\",\n  },\n  {\n    pl: \"drogi w utrzymaniu\",\n    en: \"expensive to maintain\",\n  },\n  {\n    pl: \"mieszkać samemu\",\n    en: \"live on your own\",\n  },\n  {\n    pl: \"zrobić miejsce\",\n    en: [\"make some space\", \"make space\"],\n  },\n  {\n    pl: \"rozgościć się\",\n    en: \"make yourself at home\",\n  },\n  {\n    pl: \"przeprowadzić się\",\n    en: \"move house\",\n  },\n  {\n    pl: \"płacić czynsz\",\n    en: \"pay the rent\",\n  },\n  {\n    pl: \"cisza i spokój\",\n    en: \"peace and quiet\",\n  },\n  {\n    pl: \"wynajmować mieszkanie\",\n    en: \"rent a flat\",\n  },\n  {\n    pl: \"dzielić z kimś pokój\",\n    en: \"share a room with somebody\",\n  },\n\n  // Czasowniki złożone\n  {\n    pl: \"włamać się do\",\n    en: \"break into\",\n  },\n  {\n    pl: \"uciec od czegoś\",\n    en: \"get away from\",\n  },\n  {\n    pl: \"poddać się\",\n    en: \"give up\",\n  },\n  {\n    pl: \"wprowadzić się\",\n    en: \"move in\",\n  },\n  {\n    pl: \"wyprowadzić się\",\n    en: \"move out\",\n  },\n  {\n    pl: \"podłączyć do prądu\",\n    en: \"plug in\",\n  },\n  {\n    pl: \"wyłączyć z prądu\",\n    en: \"plug off\",\n  },\n  {\n    pl: \"włączyć\",\n    en: [\"switch on\", \"turn on\"],\n  },\n  {\n    pl: \"wyłączyć\",\n    en: [\"switch off\", \"turn off\"],\n  },\n  {\n    pl: \"posprzątać\",\n    en: \"tidy up\",\n  },\n  {\n    pl: \"wyrzucić coś\",\n    en: \"throw something away\",\n  },\n  {\n    pl: \"ściszyć\",\n    en: \"turn down\",\n  },\n  {\n    pl: \"podgłośnić\",\n    en: \"turn up\",\n  },\n\n  // Inne\n  {\n    pl: \"ulubione miejsce do spędzania wolnego czasu\",\n    en: \"hangout\",\n  },\n  {\n    pl: \"zamieszkany\",\n    en: \"inhabited\",\n  },\n  {\n    pl: \"zastanawiać się\",\n    en: \"wonder\",\n  }\n]","// ŹYCIE PRYWATNE\n\nexport default [\n  // rodzina\n  {\n    pl: \"adoptowany\",\n    en: \"adopted\"\n  },\n  {\n    pl: \"ciocia\",\n    en:\"aunt\"\n  },\n  {\n    pl: \"szwagier\",\n    en: [\"brother-in-law\", \"brother in law\"]\n  },\n  {\n    pl: \"kuzyn\",\n    en: \"cousin\"\n  },\n  {\n    pl: \"teść\",\n    en: [\"father-in-law\", \"father in law\"]\n  },\n  {\n    pl: \"wnuki\",\n    en: \"grandchildren\"\n  },\n  {\n    pl: \"wnuczka\",\n    en: \"granddaughter\"\n  },\n  {\n    pl: \"dziadek\",\n    en: \"grandfather\"\n  },\n  {\n    pl: \"babcia\",\n    en: \"grandmother\"\n  },\n  {\n    pl: \"dziadkowie\",\n    en: \"grandparents\"\n  },\n  {\n    pl: \"wnuk\",\n    en: \"grandson\"\n  },\n  {\n    pl: \"prawnuki\",\n    en: [\"great-grandchildren\", \"great grandchildren\"]\n  },\n  {\n    pl: \"pradziadkowie\",\n    en: [\"great-grandparents\", \"great grandparents\"]\n  },\n  {\n    pl: \"brat przyrodni\",\n    en: [\"half-brother\", \"half brother\"]\n  },\n  {\n    pl: \"siostra przyrodnia\",\n    en: [\"half-sister\", \"half sister\"]\n  },\n  {\n    pl: \"mąż\",\n    en: \"husband\"\n  },\n  {\n    pl: \"teściowa\",\n    en: [\"mother-in-law\", \"mother in law\"]\n  },\n  {\n    pl: \"siostrzeniec, bratanek\",\n    en: \"nephew\"\n  },\n  {\n    pl: \"siostrzenica, bratanica\",\n    en: \"niece\"\n  },\n  {\n    pl: \"jedynak/jedynaczka\",\n    en: \"only child\"\n  },\n  {\n    pl: \"rodzice\",\n    en: \"parents\"\n  },\n  {\n    pl: \"krewny\",\n    en: \"relative\"\n  },\n  {\n    pl: \"rodzeństwo\",\n    en: \"sibling\"\n  },\n  {\n    pl: \"szwagierka, bratowa\",\n    en: [\"sister-in-law\", \"sister in law\"]\n  },\n  {\n    pl: \"ojczym\",\n    en: \"stepfather\"\n  },\n  {\n    pl: \"macocha\",\n    en: \"stepmother\"\n  },\n  {\n    pl: \"bliźnięta\",\n    en: \"twins\"\n  },\n  {\n    pl: \"wujek\",\n    en: \"uncle\"\n  },\n  {\n    pl: \"żona\",\n    en: \"wife\"\n  },\n  // etapy życia\n  {\n    pl: \"dorosły\",\n    en: \"adult\"\n  },\n  {\n    pl: \"w wieku\",\n    en: \"at the age of\"\n  },\n  {\n    pl: \"urodzić się\",\n    en: \"be born\"\n  },\n  {\n    pl: \"narodziny\",\n    en: \"birth\"\n  },\n  {\n    pl: \"dzieciństwo\",\n    en: \"childhood\"\n  },\n  {\n    pl: \"śmierć\",\n    en: \"death\"\n  },\n  {\n    pl: \"umrzeć\",\n    en: \"die\"\n  },\n  {\n    pl: \"w podeszłym wieku\",\n    en: \"elderly\"\n  },\n  {\n    pl: \"dorastać\",\n    en: \"grow up\"\n  },\n  {\n    pl: \"nastolatek/nastolatka\",\n    en: \"teenager\"\n  },\n  //czynności codzienne\n  {\n    pl: \"sprzątać pokój\",\n    en: \"clean your room\"\n  },\n  {\n    pl: \"odrabiać lekcje\",\n    en: \"do homework\"\n  },\n  {\n    pl: \"sprzątać\",\n    en: \"do the cleaning\"\n  },\n  {\n    pl: \"wykonywać prace domowe\",\n    en: \"do the housework\"\n  },\n  {\n    pl: \"robić zakupy\",\n    en: [\"do the shopping\", \"go shopping\"]\n  },\n  {\n    pl: \"odkurzać\",\n    en: \"do the vacuuming\"\n  },\n  {\n    pl: \"robić pranie\",\n    en: [\"do the washing\", \"wash your clothes\"]\n  },\n  {\n    pl: \"zmywać naczynia\",\n    en: [\"do the washing-up\", \"wash the dishes\"]\n  },\n  {\n    pl: \"ubierać się \",\n    en: \"get dressed\"\n  },\n  {\n    pl: \"szykować się do szkoły\",\n    en: \"get ready for school\"\n  },\n  {\n    pl: \"jechać do szkoły samochodem\",\n    en: \"go to school by car\"\n  },\n  {\n    pl: \"jeść śniadanie\",\n    en: \"have breakfast\"\n  },\n  {\n    pl: \"brać prysznic\",\n    en: \"take a shower\"\n  },\n  {\n    pl: \"nakrywać do stołu\",\n    en: \"lay the table\"\n  },\n  {\n    pl: \"ładować zmywarkę\",\n    en: \"load the dishwasher\"\n  },\n  {\n    pl: \"opiekować się kimś\",\n    en: \"look after somebody\"\n  },\n  {\n    pl: \"ścielić łóżko\",\n    en: \"make your bed\"\n  },\n  {\n    pl: \"opiekować się zwierzętami domowymi\",\n    en: \"take care of pets\"\n  },\n  {\n    pl: \"wyrzucać śmieci\",\n    en: \"take out the rubbish \"\n  },\n  {\n    pl: \"porządkować biurko\",\n    en: \"tidy your desk\"\n  },\n  {\n    pl: \"budzić się\",\n    en: \"wake up\"\n  },\n  {\n    pl: \"wyprowadzać psa\",\n    en: \"walk the dog\"\n  },\n  {\n    pl: \"myć samochód\",\n    en: \"wash the car\"\n  },\n  // czas wolny\n  {\n    pl: \"planować życie towarzyskie\",\n    en: \"arrange social life\"\n  },\n  {\n    pl: \"interesować się czymś\",\n    en: \"be interested in something\"\n  },\n  {\n    pl: \"lubić coś\",\n    en: \"be keen on something\"\n  },\n  {\n    pl: \"robić coś\",\n    en: \"be up to something\"\n  },\n  {\n    pl: \"czatować na facebooku\",\n    en: \"chat on facebook\"\n  },\n  {\n    pl: \"uprawiać sport\",\n    en: \"do sport\"\n  },\n  {\n    pl: \"pracować społecznie jako wolontariusz\",\n    en: \"do voluntary work\"\n  },\n  {\n    pl: \"dobrze się bawić\",\n    en: \"have fun\"\n  },\n  {\n    pl: \"rozrywka\",\n    en: \"entertainment\"\n  },\n  {\n    pl: \"iść na spacer\",\n    en: \"go for a walk\"\n  },\n  {\n    pl: \"wychodzić\",\n    en: \"go out\"\n  },\n  {\n    pl: \"pójść potańczyć\",\n    en: \"go dancing\"\n  },\n  {\n    pl: \"spędzać czas w internecie\",\n    en: \"spend time online\"\n  },\n  {\n    pl: \"iść do kina\",\n    en: \"go to the cinema\"\n  },\n  {\n    pl: \"spędzać z kimś czas\",\n    en: \"hang out with somebody\"\n  },\n  {\n    pl: \"być w kontakcie\",\n    en: \"keep in touch\"\n  },\n  {\n    pl: \"grać w szachy\",\n    en: \"play chess\"\n  },\n  {\n    pl: \"udostępniać zdjęcie\",\n    en: \"share a photo\"\n  },\n  {\n    pl: \"grać w gry planszowe\",\n    en: \"play board games\"\n  },\n  {\n    pl: \"rozmawiać na skypie\",\n    en: \"skype\"\n  },\n  {\n    pl: \"serwis społecznościowy\",\n    en: \"social networking site\"\n  },\n  {\n    pl: \"spędzać czas z\",\n    en: \"socialise with\"\n  },\n  {\n    pl: \"spędzać czas na powietrzu\",\n    en: \"spend time outdoors\"\n  },\n  // MAŁŻEŃSTWO I ZWIĄZKI\n  {\n    pl: \"zaprosić kogoś na randkę\",\n    en: \"ask somebody out\"\n  },\n  {\n    pl: \"wychowywać\",\n    en: \"bring up\"\n  },\n  {\n    pl: \"panna młoda\",\n    en: \"bride\"\n  },\n  {\n    pl: \"pocieszyć kogoś\",\n    en: \"cheer somebody up\"\n  },\n  {\n    pl: \"randka\",\n    en: \"date\"\n  },\n  {\n    pl: \"pierścionek zaręczynowy\",\n    en: \"engagement ring\"\n  },\n  {\n    pl: \"zakochać się\",\n    en: \"fall in love\"\n  },\n  {\n    pl: \"narzeczony\",\n    en: \"fiance\"\n  },\n  {\n    pl: \"konflikt pokoleń\",\n    en: \"generation gap\"\n  },\n  {\n    pl: \"zaręczyć się\",\n    en: \"get engaged\"\n  },\n  {\n    pl: \"poślubić kogoś\",\n    en: [\"get married\", \"marry somebody\"]\n  },\n  {\n    pl: \"być w dobrych relacjach z kimś\",\n    en: \"get on well with somebody\"\n  },\n  {\n    pl: \"poznawać kogoś\",\n    en: \"get to know somebody\"\n  },\n  {\n    pl: \"chodzić z kimś\",\n    en: \"get out with somebody\"\n  },\n  {\n    pl: \"pan młody\",\n    en: \"groom\"\n  },\n  {\n    pl: \"miesiąc miodowy\",\n    en: \"honeymoon\"\n  },\n  {\n    pl: \"przedstawić się\",\n    en: \"introduce yourself\"\n  },\n  {\n    pl: \"być z kimś w kontakcie\",\n    en: \"keep in touch with somebody\"\n  },\n  {\n    pl: \"małżeństwo\",\n    en: \"marriage\"\n  },\n  {\n    pl: \"para małżeńska\",\n    en: \"married couple\"\n  },\n  {\n    pl: \"poznać kogoś\",\n    en: \"meet somebody\"\n  },\n  {\n    pl: \"w ciąży\",\n    en: \"pregnant\"\n  },\n  {\n    pl: \"oświadczyć się komuś\",\n    en: \"propose to somebody\"\n  },\n  {\n    pl: \"związek\",\n    en: \"relationship\"\n  },\n  {\n    pl: \"samotny rodzic\",\n    en: \"single parent\"\n  },\n  {\n    pl: \"obrączka\",\n    en: \"wedding ring\"\n  },\n  // KONFLIKTY I PROBLEMY\n  {\n    pl: \"zgadzać się z\",\n    en: \"agree with\"\n  },\n  {\n    pl: \"przepraszać kogoś\",\n    en: \"apologize to somebody\"\n  },\n  {\n    pl: \"kłócić się z\",\n    en: \"argue with\"\n  },\n  {\n    pl: \"prosić o pieniądze\",\n    en: \"ask for money\"\n  },\n  {\n    pl: \"pożyczać od\",\n    en: \"borrow from\"\n  },\n  {\n    pl: \"zerwać z\",\n    en: \"break up with\"\n  },\n  {\n    pl: \"skarżyć się na\",\n    en: \"complain about\"\n  },\n  {\n    pl: \"krytykować czyjeś zachowanie\",\n    en: \"criticize somebody's behaviour\"\n  },\n  {\n    pl: \"pokłócić się\",\n    en: [\"fall out with\", \"have a fight\"]\n  },\n  {\n    pl: \"wpaść w depresję\",\n    en: \"get depressed\"\n  },\n  {\n    pl: \"rozwieść się\",\n    en: \"get divorced\"\n  },\n  {\n    pl: \"działać komuś na nerwy\",\n    en: \"get on somebody's nerves\"\n  },\n  {\n    pl: \"pożyczać komuś pieniądze\",\n    en: \"lend money to somebody\"\n  },\n  {\n    pl: \"pogodzić się z\",\n    en: \"make up with\"\n  },\n  {\n    pl: \"uciec\",\n    en: \"run away\"\n  },\n  {\n    pl: \"rozstać się\",\n    en: [\"separate\", \"split up with\"]\n  },\n  // Święta i uroczystości\n  {\n    pl: \"Wszystkich Świętych\",\n    en: \"All Saints' Day\"\n  },\n  {\n    pl: \"świętować\",\n    en: \"celebrate\"\n  },\n  {\n    pl: \"świętowanie\",\n    en: \"celebration\"\n  },\n  {\n    pl: \"cmentarz\",\n    en: [\"graveyard\", \"cemetery\"]\n  },\n  {\n    pl: \"dzień dziecka\",\n    en: \"children's day\"\n  },\n  {\n    pl: \"Święta Bożego Narodzenia\",\n    en: \"Christmas\"\n  },\n  {\n    pl: \"kartka wielkanocna\",\n    en: \"Easter card\"\n  },\n  {\n    pl: \"pierwszy dzień Świąt Bożego Narodzenia\",\n    en: \"Christmas day\"\n  },\n  {\n    pl: \"wigilia\",\n    en: \"Christmas Eve\"\n  },\n  {\n    pl: \"ubierać choinkę\",\n    en: \"decorate the christmas tree\"\n  },\n  {\n    pl: \"Wielkanoc\",\n    en: \"Easter\"\n  },\n  {\n    pl: \"króliczek wielkanocny\",\n    en: \"easter bunny\"\n  },\n  {\n    pl: \"składać sobie życzenia\",\n    en: \"exchange wishes\"\n  },\n  {\n    pl: \"święto\",\n    en: [\"holiday\", \"festival\"]\n  },\n  {\n    pl: \"pokaz fajerwerków\",\n    en: \"fireworks display\"\n  },\n  {\n    pl: \"pogrzeb\",\n    en: \"funeral\"\n  },\n  {\n    pl: \"gość\",\n    en: \"guest\"\n  },\n  {\n    pl: \"zaproszenie\",\n    en: \"invitation\"\n  },\n  {\n    pl: \"zaprosić\",\n    en: \"invite\"\n  },\n  {\n    pl: \"Dzień Matki\",\n    en: \"Mother's Day\"\n  },\n  {\n    pl: \"imieniny\",\n    en: \"name day\"\n  },\n  {\n    pl: \"nowy rok\",\n    en: \"new year\"\n  },\n  {\n    pl: \"sylwester\",\n    en: \"new years eve\"\n  },\n  {\n    pl: \"dzielić się opłatkiem\",\n    en: \"share christmas wafers\"\n  },\n  {\n    pl: \"odwiedzić groby\",\n    en: \"visit graves\"\n  },\n  {\n    pl: \"ślub\",\n    en: \"wedding\"\n  },\n  {\n    pl: \"rocznica ślubu\",\n    en: \"wedding anniversary\"\n  },\n  {\n    pl: \"przyjęcie weselne\",\n    en: \"wedding reception\"\n  },\n  // inne\n  {\n    pl: \"wymienić\",\n    en: \"exchange\"\n  },\n  {\n    pl: \"dowiedzieć się\",\n    en: \"find out\"\n  },\n  {\n    pl: \"śledzić\",\n    en: \"follow\"\n  },\n  {\n    pl: \"odżywianie\",\n    en: \"nutrition\"\n  },\n  {\n    pl: \"ssać kciuk\",\n    en: \"suck a thumb\"\n  },\n  {\n    pl: \"chować\",\n    en: \"tuck\"\n  },\n];","// EDUKACJA\n\nexport default [\n  // Przedmioty szkolne\n  {\n    pl: \"plastyka\",\n    en: \"Art\"\n  },\n  {\n    pl: \"języki obce\",\n    en: \"foreign languages\"\n  },\n  {\n    pl: \"geografia\",\n    en: \"Geography\"\n  },\n  {\n    pl: \"historia\",\n    en: \"History\"\n  },\n  {\n    pl: \"informatyka\",\n    en: [\"Information Technology\", \"IT\"]\n  },\n  {\n    pl: \"literatura\",\n    en: \"Literature\"\n  },\n  {\n    pl: \"matematyka\",\n    en: [\"Mathematics\", \"Maths\"]\n  },\n  {\n    pl: \"muzyka\",\n    en: \"Music\"\n  },\n  {\n    pl: \"wychowanie fizyczne\",\n    en: [\"Physical Education\", \"PE\"]\n  },\n  {\n    pl: \"religia\",\n    en: [\"Religious Education\", \"RE\"]\n  },\n  {\n    pl: \"nauki ścisłe\",\n    en: \"Science\"\n  },\n  {\n    pl: \"biologia\",\n    en: \"Biology\"\n  },\n  {\n    pl: \"chemia\",\n    en: \"Chemistry\"\n  },\n  {\n    pl: \"fizyka\",\n    en: \"Physics\"\n  },\n  {\n    pl: \"przedmiot szkolny\",\n    en: \"subject\"\n  },\n  // Typy szkół\n  {\n    pl: \"przedszkole\",\n    en: [\"nursery school\", \"kindergarten\", \"pre-school\"]\n  },\n  {\n    pl: \"szkoła podstawowa\",\n    en: \"primary school\"\n  },\n  {\n    pl: \"szkoła prywatna\",\n    en: [\"private school\", \"public school\"]\n  },\n  {\n    pl: \"szkoła średnia\",\n    en: \"secondary school\"\n  },\n  {\n    pl: \"szkoła państwowa\",\n    en: \"state school\"\n  },\n  {\n    pl: \"uniwersytet\",\n    en: \"university\"\n  },\n\n  // Miejsca w szkole\n  {\n    pl: \"stołówka\",\n    en: \"canteen\"\n  },\n  {\n    pl: \"klasa\",\n    en: \"classroom\"\n  },\n  {\n    pl: \"szatnia\",\n    en: \"cloakroom\"\n  },\n  {\n    pl: \"świetlica\",\n    en: \"common room\"\n  },\n  {\n    pl: \"pracownia komputerowa\",\n    en: \"computer room\"\n  },\n  {\n    pl: \"korytarz\",\n    en: \"corridor\"\n  },\n  {\n    pl: \"biurko\",\n    en: \"desk\"\n  },\n  {\n    pl: \"sala gimnastyczna\",\n    en: [\"gym\", \"gymnasium\"]\n  },\n  {\n    pl: \"aula\",\n    en: \"hall\"\n  },\n  {\n    pl: \"biblioteka\",\n    en: \"library\"\n  },\n  {\n    pl: \"szafka\",\n    en: \"locker\"\n  },\n  {\n    pl: \"sekretariat\",\n    en: \"office\"\n  },\n  {\n    pl: [\"boisko do zabawy\", \"plac zabaw\"],\n    en: \"playground\"\n  },\n  {\n    pl: \"sala do nauki (biologii, chemii, fizyki)\",\n    en: \"science lab\"\n  },\n  {\n    pl: \"boisko sportowe\",\n    en: \"sports field\"\n  },\n  {\n    pl: \"pokój nauczycielski\",\n    en: \"staff room\"\n  },\n\n  // Przybory szkolne\n  {\n    pl: \"tablica\",\n    en: [\"blackboard\", \"board\"]\n  },\n  {\n    pl: \"dziennik lekcyjny\",\n    en: \"class register\"\n  },\n  {\n    pl: \"kredki\",\n    en: \"crayons\"\n  },\n  {\n    pl: \"słownik\",\n    en: \"dictionary\"\n  },\n  {\n    pl: \"klej\",\n    en: \"glue\"\n  },\n  {\n    pl: \"zeszyt\",\n    en: [\"notebook\", \"exercise book\"]\n  },\n  {\n    pl: \"strój gimnastyczny\",\n    en: \"PE kit\"\n  },\n  {\n    pl: \"piórnik\",\n    en: \"pencil case\"\n  },\n  {\n    pl: \"gumka\",\n    en: \"rubber\"\n  },\n  {\n    pl: \"linijka\",\n    en: \"ruler\"\n  },\n  {\n    pl: \"nożyczki\",\n    en: \"scissors\"\n  },\n  {\n    pl: [\"torba szkolna\", \"tornister\"],\n    en: \"school bag\"\n  },\n  {\n    pl: \"sprzęt sportowy\",\n    en: \"sports equipment\"\n  },\n  {\n    pl: \"podręcznik\",\n    en: [\"textbook\", \"coursebook\"]\n  },\n  {\n    pl: \"biała tablica\",\n    en: \"whiteboard\"\n  },\n\n  // Pracownicy szkoły i uczniowie\n  {\n    pl: \"woźny\",\n    en: \"caretaker\"\n  },\n  {\n    pl: \"kolega ze szkoły\",\n    en: [\"schoolmate\", \"classmate\"]\n  },\n  {\n    pl: \"wychowawca\",\n    en: [\"form teacher\", \"tutor\"]\n  },\n  {\n    pl: \"dyrektor\",\n    en: [\"head teacher\", \"headmaster\"]\n  },\n  {\n    pl: \"bibliotekarz\",\n    en: \"librarian\"\n  },\n  {\n    pl: [\"profesor\", \"wykładowca akademicki\"],\n    en: \"professor\"\n  },\n  {\n    pl: \"uczeń\",\n    en: [\"schoolboy\", \"schoolgirl\", \"student\", \"pupil\"]\n  },\n  {\n    pl: \"grono pedagogiczne\",\n    en: \"teaching staff\"\n  },\n\n  // Oceny i egzaminy\n  {\n    pl: \"średnia\",\n    en: \"average\"\n  },\n  {\n    pl: \"ściągać na egzaminie\",\n    en: \"cheat in an exam\"\n  },\n  {\n    pl: \"klasówka\",\n    en: \"class test\"\n  },\n  {\n    pl: \"nie zdać egzaminu\",\n    en: \"fail an exam\"\n  },\n  {\n    pl: \"egzamin końcowy\",\n    en: \"final exam\"\n  },\n  {\n    pl: \"dostać piątkę\",\n    en: \"get an A\"\n  },\n  {\n    pl: \"dostać wyniki czegoś\",\n    en: \"get the results of something\"\n  },\n  {\n    pl: \"ocena szkolna\",\n    en: [\"mark\", \"grade\"]\n  },\n  {\n    pl: \"egzamin ustny\",\n    en: \"oral exam\"\n  },\n  {\n    pl: \"zdać egzamin\",\n    en: \"pass an exam\"\n  },\n  {\n    pl: \"przygotowywać się do egzaminów\",\n    en: \"prepare for exams\"\n  },\n  {\n    pl: \"ponownie przystępować do egzaminu\",\n    en: \"retake an exam\"\n  },\n  {\n    pl: \"powtarzać do egzaminów\",\n    en: \"revise for exams\"\n  },\n  {\n    pl: \"egzamin na koniec nauki w szkole\",\n    en: \"school-leaving exam\"\n  },\n  {\n    pl: \"świadectwo szkolne\",\n    en: \"school report\"\n  },\n  {\n    pl: \"kartkówka\",\n    en: \"short test\"\n  },\n  {\n    pl: \"przygotowywać się do\",\n    en: \"prepare for\"\n  },\n  {\n    pl: \"wkuwać\",\n    en: \"swot\"\n  },\n  {\n    pl: \"przystępować do egzaminu\",\n    en: \"take an exam\"\n  },\n  {\n    pl: \"egzamin pisemny\",\n    en: \"written exam\"\n  },\n\n  // Życie szkolne\n  {\n    pl: \"zajęcia pozalekcyjne\",\n    en: [\"after-school activities\", \"after-school club\"]\n  },\n  {\n    pl: \"uczęszczać\",\n    en: \"attend\"\n  },\n  {\n    pl: \"rozpoczynać szkołę\",\n    en: \"begin school\"\n  },\n  {\n    pl: \"przerwa na lunch\",\n    en: \"lunch break\"\n  },\n  {\n    pl: \"konkurs\",\n    en: \"competition\"\n  },\n  {\n    pl: \"obowiązkowy\",\n    en: \"compulsory\"\n  },\n  {\n    pl: \"skupić się\",\n    en: \"concentrate\"\n  },\n  {\n    pl: \"przeszkadzać\",\n    en: \"disturb\"\n  },\n  {\n    pl: \"zajęcia dodatkowe\",\n    en: \"extra activities\"\n  },\n  {\n    pl: \"uroczystość rozdania świadectw\",\n    en: \"graduation ceremony\"\n  },\n  {\n    pl: \"nieobowiązkowy\",\n    en: \"optional\"\n  },\n  {\n    pl: \"wywiadówka\",\n    en: \"parent-teacher meeting\"\n  },\n  {\n    pl: \"wycieczka szkolna\",\n    en: \"school trip\"\n  },\n  {\n    pl: \"mundurek szkolny\",\n    en: \"school uniform\"\n  },\n  {\n    pl: \"ferie zimowe\",\n    en: \"winter holiday\"\n  },\n  {\n    pl: \"plan lekcji\",\n    en: \"timetable\"\n  },\n  {\n    pl: \"lektury szkolne\",\n    en: \"set books\"\n  },\n  {\n    pl: \"semestr\",\n    en: \"term\"\n  },\n\n  // Przymiotniki - uczniowie i nauczyciele\n  {\n    pl: \"ambitny\",\n    en: \"ambitious\"\n  },\n  {\n    pl: \"przeciętny\",\n    en: \"average\"\n  },\n  {\n    pl: \"kreatywny\",\n    en: \"creative\"\n  },\n  {\n    pl: \"wymagający\",\n    en: \"demanding\"\n  },\n  {\n    pl: \"wyluzowany\",\n    en: \"easy-going\"\n  },\n  {\n    pl: \"znakomity\",\n    en: \"excellent\"\n  },\n  {\n    pl: \"niesprawiedliwy\",\n    en: \"unfair\"\n  },\n  {\n    pl: \"uzdolniony\",\n    en: \"gifted\"\n  },\n  {\n    pl: \"pracowity\",\n    en: \"hard-working\"\n  },\n  {\n    pl: \"pomocny\",\n    en: \"helpful\"\n  },\n  {\n    pl: \"nieuczciwy\",\n    en: \"dishonest\"\n  },\n  {\n    pl: \"leniwy\",\n    en: \"lazy\"\n  },\n  {\n    pl: \"niecierpliwy\",\n    en: \"impatient\"\n  },\n  {\n    pl: \"niepunktualny\",\n    en: \"unpunctual\"\n  },\n  {\n    pl: \"szanowany\",\n    en: \"respected\"\n  },\n  {\n    pl: \"lekceważący\",\n    en: \"disrespectful\"\n  },\n  {\n    pl: \"surowy\",\n    en: \"strict\"\n  },\n  {\n    pl: \"utalentowany\",\n    en: \"talented\"\n  },\n  {\n    pl: \"nietolerancyjny\",\n    en: \"intolerant\"\n  },\n  {\n    pl: \"wyrozumiały\",\n    en: \"understanding\"\n  },\n  {\n    pl: \"dziwny\",\n    en: \"weird\"\n  },\n\n  // Zwroty\n  {\n    pl: \"być nieobecnym w szkole\",\n    en: \"be absent from school\"\n  },\n  {\n    pl: \"być dobrym z czegoś\",\n    en: \"be good at something\"\n  },\n  {\n    pl: \"mieć kłopoty\",\n    en: \"be in trouble\"\n  },\n  {\n    pl: \"spóźnić się do szkoły\",\n    en: \"be late for school\"\n  },\n  {\n    pl: \"być dobrze przygotowanym\",\n    en: \"be well prepared\"\n  },\n  {\n    pl: \"odpisać pracę domową\",\n    en: \"copy homework\"\n  },\n  {\n    pl: \"robić ćwiczenie\",\n    en: \"do an exercise\"\n  },\n  {\n    pl: \"źle poradzić sobie na teście\",\n    en: \"do badly in a test\"\n  },\n  {\n    pl: \"dać z siebie wszystko\",\n    en: \"do your best\"\n  },\n  {\n    pl: \"odrabiać pracę domową\",\n    en: [\"do your homework\", \"do homework\"]\n  },\n  {\n    pl: \"mieć zaległości\",\n    en: \"fall behind\"\n  },\n  {\n    pl: \"dostać się do szkoły średniej\",\n    en: \"get into secondary school\"\n  },\n  {\n    pl: \"przygotowywać się\",\n    en: \"get ready\"\n  },\n  {\n    pl: \"zrobić sobie przerwę\",\n    en: [\"take a break\", \"have a break\"]\n  },\n  {\n    pl: \"uczyć się na pamięć\",\n    en: \"learn by heart\"\n  },\n  {\n    pl: \"rzucić szkołę\",\n    en: \"leave school\"\n  },\n  {\n    pl: \"wyszukać coś\",\n    en: \"look something up\"\n  },\n  {\n    pl: \"zrobić błąd\",\n    en: \"make a mistake\"\n  },\n  {\n    pl: \"robić postępy\",\n    en: \"make progress\"\n  },\n  {\n    pl: \"robić notatki\",\n    en: [\"take notes\", \"make notes\"]\n  },\n  {\n    pl: \"opuszczać lekcje\",\n    en: \"miss lessons\"\n  },\n  {\n    pl: \"brać w czymś udział\",\n    en: [\"participate in something\", \"take part in something\"]\n  },\n  {\n    pl: \"zwracać na kogoś uwagę\",\n    en: \"pay attention to somebody\"\n  },\n  {\n    pl: \"wagarować\",\n    en: \"play truant\"\n  },\n  {\n    pl: \"uczyć się pilnie\",\n    en: \"study hard\"\n  },\n  {\n    pl: \"sprawdzać listę obecności\",\n    en: \"take the register\"\n  },\n  {\n    pl: \"pisać wypracowanie\",\n    en: \"write an essay\"\n  },\n\n  // Inne\n  {\n    pl: \"umiejętność\",\n    en: \"ability\"\n  },\n  {\n    pl: \"kontroler lotów\",\n    en: \"air traffic controller\"\n  },\n  {\n    pl: \"lotnictwo\",\n    en: \"aviation\"\n  },\n  {\n    pl: \"powodować\",\n    en: \"cause\"\n  },\n  {\n    pl: \"zawierać\",\n    en: \"contain\"\n  },\n  {\n    pl: \"krzyżówka\",\n    en: \"crossword\"\n  },\n  {\n    pl: \"zatłoczony\",\n    en: \"crowded\"\n  },\n  {\n    pl: \"zależeć od\",\n    en: \"depend on\"\n  },\n  {\n    pl: \"zwiększyć\",\n    en: \"expand\"\n  },\n  {\n    pl: \"najnowsze badania\",\n    en: \"latest research\"\n  },\n  {\n    pl: \"nieporozumienie\",\n    en: \"misunderstanding\"\n  },\n  {\n    pl: \"skończyć się czymś\",\n    en: \"result in something\"\n  },\n  {\n    pl: \"zestaw\",\n    en: \"set\"\n  },\n  {\n    pl: \"kleić się\",\n    en: \"stick\"\n  },\n  {\n    pl: \"aktualny\",\n    en: \"up-to-date\"\n  }\n];","<svelte:head>\n  <link href=\"https://fonts.googleapis.com/css?family=Asap\" rel=\"stylesheet\">\n</svelte:head>\n\n<script>\n\timport Button from \"./components/Button.svelte\";\n\timport MainContainer from \"./components/MainContainer.svelte\";\n\timport Quiz from \"./components/Quiz.svelte\";\n\timport TextInput from \"./components/TextInput.svelte\";\n\timport chapter1 from \"./words/chapter1.js\";\n\timport chapter2 from \"./words/chapter2.js\";\n\timport chapter3 from \"./words/chapter3.js\";\n\timport chapter4 from \"./words/chapter4.js\";\n\t\n\tlet selectedQuiz = null;\n\tlet wordsLength = 10;\n\tlet quizes = {\n\t\tchapter1,\n\t\tchapter2,\n\t\tchapter3,\n\t\tchapter4\n\t}\n\n\tconst openQuiz = (name) => {\n\t\tselectedQuiz = quizes[name];\n\t}\n</script>\n\n{#if selectedQuiz}\n\t<Quiz words={selectedQuiz} wordsLength={wordsLength}></Quiz>\n\n\t{:else}\n\t<MainContainer>\n\t<TextInput bind:value={wordsLength} label=\"Ilość słówek\"/>\n\t\t<Button click={() => { openQuiz(\"chapter1\"); }}>Chapter 1</Button>\n\t\t<Button click={() => { openQuiz(\"chapter2\"); }}>Chapter 2</Button>\n\t\t<Button click={() => { openQuiz(\"chapter3\"); }}>Chapter 3</Button>\n\t\t<Button click={() => { openQuiz(\"chapter4\"); }}>Chapter 4</Button>\n\t</MainContainer>\n{/if}\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {}\n});\n\nexport default app;"],"names":[],"mappings":"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"}